name: Build, Pull Docker Image, and Deploy to Render

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx (multi-platform build support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub using credentials from GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecomm:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ecomm:latest
      
      # Pull the Docker image from Docker Hub
      - name: Pull Docker image from Docker Hub
        run: |
          docker pull docker.io/sharathk123/ecomm:latest

      # Stop Render Service (using Render API)
      - name: Stop Render Service
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/stop'
          method: 'POST'
          customHeaders: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}"}'
          data: '{}'
      
      # Trigger Render deployment to restart the service (using Render API)
      - name: Trigger Render deployment
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys'
          method: 'POST'
          customHeaders: '{"Authorization": "Bearer ${{ secrets.RENDER_API_KEY }}"}'
          data: '{}'